user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  # types
  include /etc/nginx/mime.types;
  types
  {
      application/javascript mjs;
  }
  default_type application/octet-stream;

  # logs
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;

  # gzip compression
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 2;
  gzip_min_length 860;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types
    text/css
    text/plain
    text/javascript
    text/html
    application/javascript
    application/json
    application/x-javascript
    application/xml
    application/xml+rss
    application/xhtml+xml
    application/x-font-ttf
    application/x-font-opentype
    application/vnd.ms-fontobject
    image/svg+xml
    image/x-icon
    application/rss+xml
    application/atom_xml;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  # upstreams
  upstream postgrest {
    server postgrest.postgrest.svc:3000;
  }

  upstream jaeger {
    server jaeger-jaeger-all-in-one.jaeger.svc:16686;
  }

  # http server (80)
  server {
    listen 80;

    # postgrest
    location ~* ^/postgrest/ {
      # rewrite
      rewrite ^/postgrest/(.*) /$1 break;
      # proxy
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_pass http://postgrest;
    }

    # jaeger
    location ~* ^/jaeger/ {
      # rewrite
      rewrite ^/jaeger/(.*) /$1 break;
      # proxy
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_pass http://jaeger;
    }

    # static assets
    location / {
      # rewrite .html
      if ($request_uri ~ ^/(.*)\.html$) {
        return 302 /$1;
      }
      # serve static
      try_files $uri $uri.html $uri/ =404;
      # root
      root /usr/share/nginx/html;
    }
  }
}
